@using System.Collections
@model EuCorro.Domain.Models.Empresa

@{
    ViewBag.Title = "Empresa";
    ViewBag.SubTitle = "Cadastro da Empresa";
    var imgSrc = Url.Content("~/Uploads/Atletas/Anonymous.png");
}

@section Menu {
    @Scripts.Render("~/Scripts/Cadastro/Empresa/menu")
}

@Styles.Render("~/jasny-bootstrap/css")
<link href="~/Content/css/estilo-mapa.css" rel="stylesheet" />
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false"></script>

<section class="box">
    @using (Html.BeginForm("Create", "Empresa", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="box box-warning">
            <div class="box-header with-border">
                <h3 class="box-title">@ViewBag.SubTitle</h3>
            </div>
            <div class="box-body">
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Latitude)
                    @Html.HiddenFor(model => model.Longitude)
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control Fone" } })
                                    @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Responsavel, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Responsavel, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Responsavel, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control Fone" } })
                                    @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EstadoId, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.EstadoId, new SelectList(ViewBag.Estado as IEnumerable, "EstadoId", "Nome"), "Selecione o Estado...", new { @id = "ddlEstados", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EstadoId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CidadeId, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.CidadeId, Enumerable.Empty<SelectListItem>(), "Selecione a Cidade...", new { @id = "ddlCidades", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CidadeId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-offset-3 col-md-9" id="mapa"></div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CNPJ, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.CNPJ, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CNPJ, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Avatar, "Avatar", new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    <div class="fileinput fileinput-new" data-provides="fileinput">
                                        <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 280px; height: 230px;">
                                            <img src="@imgSrc" alt="...">
                                        </div>
                                        <div>
                                            <span class="btn btn-primary btn-file">
                                                <span class="fileinput-new">Procurar Foto</span>
                                                <span class="fileinput-exists">Alterar Foto</span>
                                                @Html.TextBoxFor(model => model.Avatar, new { @type = "file", @class = "form-control", @accept = "image/x-png, image/gif, image/jpeg, image/jpg", @maxlength = "2000" })
                                                @Html.ValidationMessageFor(model => model.Avatar)
                                            </span>
                                            <a href="#" class="btn btn-danger fileinput-exists" data-dismiss="fileinput">Remover Avatar</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <div class="panel-footer form-group">
                        @*<div class="col-md-offset-3 col-md-9">*@
                            <button type="submit" class="btn btn-primary">Salvar Registros</button>
                            <a class="btn btn-danger" href="@Url.Action("Details")">Cancelar</a>
                        @*</div>*@
                    </div>
                </div>
            </div>
        </div>
    }
</section>

@section Scripts {
    @Scripts.Render("~/AdminLTE/plugins/jquery-validate/js")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/jasny-bootstrap/js")
    <script src="~/Scripts/CadastroAtleta/CadastroAtleta.js"></script>
    <script src="~/Scripts/Empresa/mapa.js"></script>
    <script src="~/Scripts/Empresa/jquery-ui.custom.min.js"></script>

    @*<script>

                $(document).ready(function () {

                    var masks = ['(00) 00000-0000', '(00) 0000-00009'];

                    //Código para contornar o conflito do jquery mask com o jquery validate
                    $(function () {

                        //$('.Fone').mask("(99) 99990-9999");
                        $('.Fone').mask(masks[1], {
                            onKeyPress: function (val, e, field, options) {
                                field.mask(val.length > 14 ? masks[0] : masks[1], options);
                            }
                        });

                        //$("#Telefone").mask(masks[1], {
                        //    onKeyPress: function (val, e, field, options) {
                        //        field.mask(val.length > 14 ? masks[0] : masks[1], options);
                        //    }
                        //});
                        //$("#FoneContato").mask(masks[1], {
                        //    onKeyPress: function (val, e, field, options) {
                        //        field.mask(val.length > 14 ? masks[0] : masks[1], options);
                        //    }
                        //});
                        //$("#Celular").mask(masks[1], {
                        //    onKeyPress: function (val, e, field, options) {
                        //        field.mask(val.length > 14 ? masks[0] : masks[1], options);
                        //    }
                        //});
                        //$("#WhatsApp").mask(masks[1], {
                        //    onKeyPress: function (val, e, field, options) {
                        //        field.mask(val.length > 14 ? masks[0] : masks[1], options);
                        //    }
                        //});

                        $("#CNPJ").mask("99.999.999/9999-99");
                        $("#CEP").mask("99.999-999");
                        $("#DataNascimento").mask("99/99/9999");

                        $("#ddlEstados").on("change", function () {
                            var estadoId = $(this).val();
                            //var url = '@Url.Action("LoadCidadeId", "Cadastro")';
                            var url = '/Cadastro/LoadCidadeId/';
                            $.getJSON(url, { estadoId: estadoId },
                                function (estadosData) {
                                    $("#ddlCidades :gt(0)").remove();
                                    var select = $("#ddlCidades");
                                    select.attr('disabled', false);
                                    select.empty();
                                    select.append($('<option/>', {
                                        value: 0,
                                        text: "Selecione a Cidade... "
                                    }));
                                    $.each(estadosData, function (index, itemData) {
                                        //alert(estadosData);
                                        //alert(itemData);
                                        select.append($('<option/>', {
                                            value: itemData.Value,
                                            text: itemData.Text
                                        }));
                                    });
                                });
                        });

                    });

                });

        </script>*@
}